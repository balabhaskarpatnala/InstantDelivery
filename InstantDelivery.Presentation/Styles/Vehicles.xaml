<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="VehicleModelTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource EditDialogTextBox}">
        <Setter Property="Visibility" Value="{Binding ElementName=AddNewVehicleModel, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"></Setter>
    </Style>

    <Style x:Key="VehicleModelLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource EditDialogLabel}">
        <Setter Property="Visibility" Value="{Binding ElementName=AddNewVehicleModel, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"></Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="VehicleEditSaveButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="3"></Setter>
        <Setter Property="MinWidth" Value="60"></Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_RegistrationNumber, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_Brand, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_Model, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_Payload, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_AvailableSpaceX, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_AvailableSpaceY, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_AvailableSpaceZ, Path=(Validation.HasError)}" Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="true" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_RegistrationNumber, Path=(Validation.HasError)}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_Brand, Path=(Validation.HasError)}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_Model, Path=(Validation.HasError)}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_Payload, Path=(Validation.HasError)}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_AvailableSpaceX, Path=(Validation.HasError)}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_AvailableSpaceY, Path=(Validation.HasError)}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_VehicleModel_AvailableSpaceZ, Path=(Validation.HasError)}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="VehicleAddSaveButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="3"></Setter>
        <Setter Property="MinWidth" Value="60"></Setter>
        <Setter Property="IsEnabled" Value="true" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_RegistrationNumber, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=AddNewVehicleModel, Path=IsChecked}" Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="true" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_RegistrationNumber, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=AddNewVehicleModel, Path=IsChecked}" Value="true" />
                    <Condition Binding="{Binding ElementName=NewVehicleModel_Brand, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=NewVehicleModel_Model, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=NewVehicleModel_Payload, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=NewVehicleModel_AvailableSpaceX, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=NewVehicleModel_AvailableSpaceY, Path=(Validation.HasError)}" Value="false" />
                    <Condition Binding="{Binding ElementName=NewVehicleModel_AvailableSpaceZ, Path=(Validation.HasError)}" Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="true" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=AddNewVehicleModel, Path=IsChecked}" Value="false" />
                    <Condition Binding="{Binding ElementName=VehicleModel, Path=SelectedItem}" Value="{x:Null}" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Vehicle_RegistrationNumber, Path=(Validation.HasError)}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=NewVehicleModel_Brand, Path=(Validation.HasError)}" Value="true" />
                    <Condition Binding="{Binding ElementName=AddNewVehicleModel, Path=IsChecked}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=NewVehicleModel_Model, Path=(Validation.HasError)}" Value="true" />
                    <Condition Binding="{Binding ElementName=AddNewVehicleModel, Path=IsChecked}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=NewVehicleModel_Payload, Path=(Validation.HasError)}" Value="true" />
                    <Condition Binding="{Binding ElementName=AddNewVehicleModel, Path=IsChecked}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=NewVehicleModel_AvailableSpaceX, Path=(Validation.HasError)}" Value="true" />
                    <Condition Binding="{Binding ElementName=AddNewVehicleModel, Path=IsChecked}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=NewVehicleModel_AvailableSpaceY, Path=(Validation.HasError)}" Value="true" />
                    <Condition Binding="{Binding ElementName=AddNewVehicleModel, Path=IsChecked}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=NewVehicleModel_AvailableSpaceZ, Path=(Validation.HasError)}" Value="true" />
                    <Condition Binding="{Binding ElementName=AddNewVehicleModel, Path=IsChecked}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="false" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
   
</ResourceDictionary>
